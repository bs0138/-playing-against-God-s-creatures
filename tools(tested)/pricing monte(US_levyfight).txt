

```R
num_simulations <- 10000
time_horizon <- 250 
time_step <- 1
mu <- 0.05
sigma <- 0.2
jump_intensity <- 0.1
jump_size <- 0.3
current_price <- 100 
strike_price <- 110 
risk_free_rate <- 0.02 

set.seed(123)
stock_prices <- matrix(0, nrow = num_simulations, ncol = time_horizon + 1)
stock_prices[,1] <- current_price

for (i in 2:(time_horizon + 1)) {
  dt <- time_step / 365
  dw <- rnorm(num_simulations, mean = 0, sd = sqrt(dt))
  n_jumps <- rpois(num_simulations, jump_intensity * dt)
  jump_sizes <- rnorm(num_simulations, mean = jump_size, sd = sqrt(jump_size))
  jump_deltas <- cumsum(ifelse(n_jumps > 0, jump_sizes, 0))
  stock_prices[,i] <- stock_prices[,i-1] * exp((mu - sigma^2 / 2) * dt + sigma * sqrt(dt) * dw + jump_deltas)
}

discount_factor <- exp(-risk_free_rate * time_horizon / 365)
call_option_payoffs <- matrix(0, nrow = num_simulations, ncol = 1)

for (i in 1:num_simulations) {
  exercise_values <- pmax(stock_prices[i,time_horizon+1] - strike_price, 0)
  option_values <- exercise_values

  for (j in (time_horizon - 1):0) {
    early_exercise <- pmax(stock_prices[i,j+1] - strike_price, 0)
    continuation_value <- discount_factor * (mean(option_values) - early_exercise)
    option_values <- pmax(exercise_values, continuation_value)

    if (!is.na(early_exercise) && early_exercise > 0 && !is.na(option_values[j+1]) && option_values[j+1] > early_exercise) {
      option_values[j+1:time_horizon] <- early_exercise
      break
    }
  }

  call_option_payoffs[i] <- option_values[1]
}


call_price <- mean(call_option_payoffs)
call_standard_error <- sd(call_option_payoffs) / sqrt(num_simulations)
call_confidence_interval <- c(call_price, call_price) + qt(c(0.025, 0.975), df = num_simulations - 1) * call_standard_error

put_payoffs <- matrix(0, nrow = num_simulations, ncol = 1)
for (i in 1:num_simulations) {
  put_payoffs[i] <- pmax(strike_price - stock_prices[i,time_horizon+1], 0)
}

put_price <- mean(put_payoffs)

put_standard_error <- sd(put_payoffs) / sqrt(num_simulations)
put_confidence_interval <- c(put_price, put_price) + qt(c(0.025, 0.975), df = num_simulations - 1) * put_standard_error


cat("Call price:", call_price, "\n")
cat("Put price:", put_price, "\n")
``` 


```
